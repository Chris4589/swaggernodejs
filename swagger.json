{
    "swagger": "2.0",
    "info": {
      "description": "This is an example of using OAuth2 Access Code Flow in a specification to describe security to your API.",
      "version": "1.0.0",
      "title": "Sample Access Code Flow OAuth2 Project"
    },
    "schemes": [
      "http"
    ],
    "security": [
      {
        "accessCode": [
          "read",
          "write"
        ]
      }
    ],
    "paths": {
      "/users/": {
        "get": {
          "summary": "Borrar filas",
          "description": "Borrar filas",
          "parameters": [
              
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          }
        },
        "post":{
            "summary": "Server heartbeat operation",
            "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
            "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                    "in": "body",
                    "name": "body",
                    "description": "order placed for purchasing the pet",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/Users"
                    }
                }
              ],
            "responses": {
              "200": {
                "description": "OK"
              }
            },
            "security": []
        },
        "put":{
            "summary": "Server heartbeat operation",
            "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
            "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                    "in" : "query",
                    "name" : "id"
                },
                {
                    "in" : "header",
                    "name" : "token"
                },
                {
                    "in": "body",
                    "name": "body",
                    "description": "order placed for purchasing the pet",
                    "required": true,
                    "schema": {
                      "$ref": "#/definitions/Users2"
                    }
                }
              ],
            "responses": {
              "200": {
                "description": "OK"
              }
            },
            "security": []
        },
        "delete":{
            "summary": "Server heartbeat operation",
            "description": "This operation shows how to override the global security defined above, as we want to open it up for all users.",
            "consumes": [
                "application/json"
              ],
              "produces": [
                "application/json"
              ],
              "parameters": [
                {
                    "in" : "query",
                    "name" : "id"
                },
                {
                    "in" : "header",
                    "name" : "token"
                }
              ],
            "responses": {
              "200": {
                "description": "OK"
              }
            },
            "security": []
        }
      }
      
    },
    "securityDefinitions": {
      "accessCode": {
        "type": "oauth2",
        "authorizationUrl": "http://example.com/oauth/auth",
        "tokenUrl": "http://example.com/oauth/token",
        "flow": "accessCode",
        "scopes": {
          "write": "allows modifying resources",
          "read": "allows reading resources"
        }
      }
    },
    "definitions": {
        "Users": {
            "type": "object",
            "properties": {
              "user": {
                "type": "string"
              },
              "password": {
                "type": "string"
              }
            }
        },

        "Users2": {
            "type": "object",
            "properties": {
              "user": {
                "type": "string"
              },
              "role": {
                "type": "string"
              }
            }
        }
    }
  }